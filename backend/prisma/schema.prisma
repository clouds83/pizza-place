// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// to create: npx prisma migrate dev --name init
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@map ("users")
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@map ("categories")
  products  Product[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  price       String
  description String
  banner      String
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt

  category Category @relation(fields: [category_id], references: [id])

  @@map ("products")
  category_id String
  order_items OrderItem[]
}


model Order {
  id        String   @id @default(uuid())
  table     Int
  status    Boolean @default(false)
  draft     Boolean @default(true)
  name      String?

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@map ("orders")
  items OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  amount    Int

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  order Order @relation(fields: [order_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  @@map ("order_items")
  order_id   String
  product_id String
}